-- Basic querying --

Create Table EmployeeDemographics 
(EmployeeID INTEGER, 
FirstName TEXT, 
LastName TEXT, 
Age INTEGER, 
Gender TEXT
);

Insert into EmployeeDemographics VALUES
(1001, 'Sterling', 'Archer', 42, 'Male'),
(1002, 'Lana', 'Kane', 32, 'Female'),
(1003, 'Cyril', 'Figgis', 45, 'Male'),
(1004, 'Cheryl', 'Tunt', 34, 'Female'),
(1005, 'Algernop', 'Krieger', 43, 'Male'),
(1006, 'Mallory', 'Archer', 64, 'Female'),
(1007, 'Pam', 'Poovey', 38, 'Female'),
(1008, 'Ray', 'Gillete', 39, 'Male');


Create Table EmployeeSalary 
(EmployeeID INTEGER, 
JobTitle TEXT, 
Salary INTEGER
);

Insert Into EmployeeSalary VALUES
(1001, 'Field Agent', 80000),
(1002, 'Field Agent', 80000),
(1003, 'Accountant', 60000),
(1004, 'Receptionist', 40000),
(1005, 'Research & Development', 70000),
(1006, 'CEO', 100000),
(1007, 'HR', 55000),
(1008, 'Field Agent', 80000);


SELECT * FROM EmployeeDemographics;
SELECT * FROM EmployeeSalary;
SELECT * FROM EmployeeSalary
WHERE Salary>60000;

SELECT TOP 3 * FROM EmployeeSalary;

SELECT DISTINCT (Gender)  FROM EmployeeDemographics;

SELECT COUNT(EmployeeDemographics.LastName) FROM  EmployeeDemographics; 

SELECT Gender, COUNT(Gender) AS Number FROM EmployeeDemographics
WHERE Age >35
GROUP BY Gender
ORDER BY Number DESC;

SELECT EmployeeDemographics.Gender, MAX(EmployeeSalary.Salary) as MaximumSalary FROM EmployeeDemographics LEFT OUTER JOIN EmployeeSalary
ON EmployeeDemographics.EmployeeID=EmployeeSalary.EmployeeID
Group by EmployeeDemographics.Gender
Order by MaximumSalary DESC;

SELECT EmployeeDemographics.Gender, AVG(EmployeeSalary.Salary) as AverageSalary FROM EmployeeDemographics LEFT OUTER JOIN EmployeeSalary
ON EmployeeDemographics.EmployeeID=EmployeeSalary.EmployeeID
Group by EmployeeDemographics.Gender
Order by AverageSalary DESC;

SELECT * FROM EmployeeDemographics LEFT OUTER JOIN EmployeeSalary
ON EmployeeDemographics.EmployeeID = EmployeeSalary.EmployeeID
ORDER BY EmployeeDemographics.EmployeeID ASC;

/*Intermediate Querying*/

Insert into EmployeeDemographics VALUES
(1009, 'Brett', 'Bunson', 40, 'Male'),
(NULL, 'Katya','Kazanova', 25, 'Female'),
(1011, 'Barry', 'Dylan', 36, 'Male');

Insert into EmployeeSalary VALUES
(1010, NULL, 80000),
(NULL, 'Field Agent', 80000);

SELECT * FROM EmployeeDemographics;
SELECT * FROM EmployeeSalary;

SELECT * FROM EmployeeDemographics INNER JOIN EmployeeSalary
ON EmployeeDemographics.EmployeeID=EmployeeSalary.EmployeeID;

SELECT * FROM EmployeeDemographics LEFT JOIN EmployeeSalary
ON EmployeeDemographics.EmployeeID=EmployeeSalary.EmployeeID;

SELECT * FROM EmployeeDemographics RIGHT JOIN EmployeeSalary
ON EmployeeDemographics.EmployeeID=EmployeeSalary.EmployeeID;

SELECT * FROM EmployeeDemographics FULL OUTER JOIN EmployeeSalary
ON EmployeeDemographics.EmployeeID=EmployeeSalary.EmployeeID;



DELETE FROM EmployeeDemographics
WHERE EmployeeDemographics.FirstName IN ('Katya','Barry','Brett') ;

SELECT * FROM EmployeeDemographics;

SELECT EmployeeDemographics.FirstName,EmployeeDemographics.LastName,EmployeeSalary.JobTitle,EmployeeSalary.Salary,
CASE
	WHEN Salary>=80000 THEN 'High'
	WHEN Salary >= 50000 AND Salary <80000 THEN 'Medium'
	WHEN Salary >= 35000 AND Salary <50000 THEN 'Low'
	ELSE 'Very low'
END AS SalaryBand
FROM EmployeeDemographics INNER JOIN EmployeeSalary
ON EmployeeDemographics.EmployeeID=EmployeeSalary.EmployeeID
ORDER BY Salary DESC;

-- Using CTE's --

WITH salary_per_title(Title,Average_Salary)
AS 
(SELECT JobTitle, AVG(Salary) AS AVG_Salary FROM EmployeeDemographics INNER JOIN EmployeeSalary
ON EmployeeDemographics.EmployeeID=EmployeeSalary.EmployeeID
GROUP BY JobTitle)
SELECT * FROM salary_per_title
WHERE Title IN ('HR','Accountant','Secretary');


